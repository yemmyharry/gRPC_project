syntax = "proto3";

package calculator;

option go_package = "./calculator/calculatorpb" ;

import "google/api/annotations.proto";

message SumRequest {
  int32 first_num = 1;
  int32 second_num = 2;
}

message SumResponse {
  int32 sum_result = 1;
}

message PrimeNumberDecompositionRequest {
  int32 number = 1;
}

message PrimeNumberDecompositionResponse {
  int32 prime_numbers = 1;
}

message ComputeAverageRequest{
  int32 first_num = 1;
  int32 second_num = 2;
}

message ComputeAverageResponse{
  float average = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 result = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  float square_root = 1;
}

service CalculatorService {
  //unary
  rpc Sum(SumRequest) returns (SumResponse) {
    option (google.api.http) = {
      post: "/sum"
      body: "*"
  } ;
  }
  // server streaming
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {
    option (google.api.http) = {
      post: "/prime_number_decomposition"
      body: "*"
    };
  } ;
  // client streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {
    option (google.api.http) = {
      post: "/compute_average"
      body: "*"
    };
  } ;
  // bi-directional streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {
    option (google.api.http) = {
      post: "/find_maximum"
      body: "*"
    };
  } ;
  //unary
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {
    option (google.api.http) = {
      post: "/square_root"
      body: "*"
    };
  } ;
}

